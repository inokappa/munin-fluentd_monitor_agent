#!/usr/bin/env ruby

require 'json'
require 'open-uri'
#
# Function
#
$rtc_threshold = 10
$bql_threshold = 256
$btqs_threshold = 2147483648
$host = "127.0.0.1"
#
# Methods
#
def get_td_status(host)
  status_url = "http://#{host}:24220/api/plugins.json"
  begin
    status_html = open("#{status_url}").read
    rescue => exception
      case exception
      when OpenURI::HTTPError
        puts "status URL does not access."
        stats = "critical"
        exit 1
      end
  else
    JSON.parser.new(status_html).parse()
  end
end
#
def check_stats(rtc, bql, btqs)
  if ( rtc >= $rtc_threshold or bql >= $bql_threshold or btqs >= $btqs_threshold )
    return "warning"
  else
    return "normally"
  end
end
#
def write_result_h(host, type, rtc, bql, btqs)
  r = {}
  r[:host] = host
  r[:type] = type
  r[:retry_count] = rtc
  r[:buffer_queue_length] = bql
  r[:buffer_total_queued_size] = btqs
  puts r
end

def write_result_t(host, type, rtc, bql, btqs, stats)
  puts "#{type}_Retry_Count.value " + "#{rtc}"
  puts "#{type}_Buffer_Queue_Length.value " + "#{bql}"
  puts "#{type}_Buffer_Total_Queued_Size.value " + "#{btqs}"
end

def munin_config(type)
   puts 'graph_title fluentd monitor_agent'
   puts 'graph_args --rigid --lower-limit 0'
   puts 'graph_scale no'
   puts 'graph_vlabel Count'
   puts 'graph_category Fluentd'
   fields = ['Retry_Count', 'Buffer_Queue_Length', 'Buffer_Total_Queued_Size']
   fields.each do |field|
     puts "#{type}_#{field}.label #{type}_#{field}"
     puts "#{type}_#{field}.min 0"
     puts "#{type}_#{field}.draw LINE2"
     puts "#{type}_#{field}.type GAUGE"
   end
   puts ""
   exit 0
end
